// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution{
    public:
    
    int longestCommonSubstr (string S1, string S2, int n, int m)
    {
        int a[n+1][m+1];
        int max = 0;
        for (int i = 0; i <= n; i ++) {
            for (int j = 0; j <= n; j++) {
                if (i == 0 || j == 0) {
                    a[i][j] = 0;
                } else if (S1[i - 1] == S2[j - 1]) {
                    a[i][j] = a[i-1][j-1] + 1;
                    
                } else {
                    a[i][j] = 0;
                    
                }
                if (a[i][j] > max) {
                    max = a[i][j];
                }
            }

        }
        int k = 0;
        char final[m+n];
        int i = n;
        int j = m;
        while (i>0 && j>0) {
                if (S1[i-1] == S2[j-1]) {
                    final[k] = S1[i-1];
                    i--;
                    j--;
                    k++;
                    
                } else if(a[i-1][j] > a[i][j-1]) {
                    i--;
                } else {
                    j--;
                }
        }
    
        
        for (int o=0; o <k; o++) {
            cout << final[o];
        }
        
        return max;
        
        
        

        
    }
};

// { Driver Code Starts.

int main()
{
    int t; cin >> t;
    while (t--)
    {
        int n, m; cin >> n >> m;
        string s1, s2;
        cin >> s1 >> s2;
        Solution ob;

        cout << ob.longestCommonSubstr (s1, s2, n, m) << endl;
    }
}
// Contributed By: Pranay Bansal
  // } Driver Code Ends
